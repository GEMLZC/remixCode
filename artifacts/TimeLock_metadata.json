{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "txId",
						"type": "bytes32"
					}
				],
				"name": "AlreadyQueuedError",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "txId",
						"type": "bytes32"
					}
				],
				"name": "CallFailError",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "txId",
						"type": "bytes32"
					}
				],
				"name": "CancelError",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amont",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "funName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "QueuedTxNotExist",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amont",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "funName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "errorMessage",
						"type": "string"
					}
				],
				"name": "TimeError",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "_txId",
						"type": "bytes32"
					}
				],
				"name": "CancelSuceess",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "txId",
						"type": "bytes32"
					}
				],
				"name": "TransactionExecuteSuccess",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amont",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "funName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "TransactionQueueing",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_TIME",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_TIME",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_txId",
						"type": "bytes32"
					}
				],
				"name": "cancel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amont",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "funName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "execute",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amont",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "funName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "queue",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "queueMapping",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"execute(address,uint256,string,uint256,bytes)": {
					"notice": "_to:合约地址 _amont:金额 funName:函数名称 timestamp:时间 _data:函数的参数"
				},
				"queue(address,uint256,string,uint256)": {
					"notice": "_to:合约地址 _amont:金额 funName:函数名称 timestamp:时间"
				}
			},
			"notice": "基本流程 3. ： ◦ 事务队列：通过 queue 函数⼴播即将执⾏的交易。 ◦ 等待期：根据Time\u0001Lock合约设定的时间（从24⼩时到⼏天不等）等待。\u0001 ◦ 执⾏交易：等待期过后，调⽤ execute 函数执⾏交易。 4. 安全机制：提供⽤⼾响应时间以确保交易的安全性，防⽌恶意操作。 5. 合约实例：介绍 TestTimeLock 合约和 test 函数的关系及其安全特性。",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/base/GasGolf.sol": "TimeLock"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/base/GasGolf.sol": {
			"keccak256": "0x4a84d23a517732c515675ed0e4e52798baf78c7f4c7e094f9a8ac2a45f5b1182",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://dbc61ee5741473fb0ef7c027e58b6ada463d6160e1952fe2ab8ab7a1053a3123",
				"dweb:/ipfs/QmY2d2DUEKVX3Eh3sUoFSR1VbMNGjY6XjWRheQzhrZ4bPe"
			]
		}
	},
	"version": 1
}